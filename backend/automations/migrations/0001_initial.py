# Generated by Django 5.2.3 on 2025-06-20 17:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('business_type', models.CharField(choices=[('bpo', 'BPO Company'), ('real_estate', 'Real Estate'), ('consulting', 'Consulting'), ('ecommerce', 'E-commerce'), ('agency', 'Marketing Agency'), ('restaurant', 'Restaurant'), ('retail', 'Retail Store'), ('freelancer', 'Freelancer'), ('ofw_family', 'OFW Family'), ('general', 'General Business')], max_length=50)),
                ('category', models.CharField(choices=[('customer_service', 'Customer Service'), ('sales_marketing', 'Sales & Marketing'), ('hr_payroll', 'HR & Payroll'), ('finance_accounting', 'Finance & Accounting'), ('inventory_orders', 'Inventory & Orders'), ('social_media', 'Social Media'), ('compliance', 'Government Compliance'), ('communication', 'Communication')], max_length=50)),
                ('workflow_config', models.JSONField(help_text='Complete workflow structure')),
                ('required_integrations', models.JSONField(default=list, help_text='Required third-party integrations')),
                ('estimated_setup_time', models.IntegerField(help_text='Minutes to setup')),
                ('setup_instructions', models.TextField(help_text='Step-by-step setup instructions')),
                ('preview_image', models.URLField(blank=True)),
                ('demo_video_url', models.URLField(blank=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('tagalog_name', models.CharField(blank=True, max_length=255)),
                ('tagalog_description', models.TextField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False, help_text='Requires Business/Pro subscription')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Automation Template',
                'verbose_name_plural': 'Automation Templates',
                'db_table': 'automation_templates',
                'ordering': ['-is_featured', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='AutomationWorkflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('trigger_type', models.CharField(choices=[('email', 'Email Received'), ('form_submission', 'Form Submission'), ('payment', 'Payment Received'), ('schedule', 'Scheduled Trigger'), ('webhook', 'Webhook'), ('manual', 'Manual Trigger')], max_length=50)),
                ('trigger_config', models.JSONField(default=dict, help_text='Trigger-specific configuration')),
                ('ai_instructions', models.TextField(blank=True, help_text='Custom instructions for AI processing in English/Tagalog')),
                ('use_ai_processing', models.BooleanField(default=True)),
                ('ai_model_preference', models.CharField(choices=[('auto', 'Auto (based on subscription)'), ('free', 'DeepSeek R1'), ('business', 'GPT-4o-mini'), ('premium', 'Claude 3.5')], default='auto', max_length=50)),
                ('total_executions', models.IntegerField(default=0)),
                ('successful_executions', models.IntegerField(default=0)),
                ('failed_executions', models.IntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('business_hours_only', models.BooleanField(default=True, help_text='Run only during Philippine business hours')),
                ('language_context', models.CharField(choices=[('en', 'English'), ('tl', 'Tagalog'), ('mixed', 'English + Tagalog')], default='mixed', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Automation Workflow',
                'verbose_name_plural': 'Automation Workflows',
                'db_table': 'automation_workflows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for this action', max_length=255)),
                ('action_type', models.CharField(choices=[('create_task', 'Create Task'), ('send_email', 'Send Email'), ('send_sms', 'Send SMS'), ('create_calendar_event', 'Create Calendar Event'), ('schedule_reminder', 'Schedule Reminder'), ('update_crm', 'Update CRM'), ('create_lead', 'Create Lead'), ('update_contact', 'Update Contact'), ('gcash_payment_reminder', 'GCash Payment Reminder'), ('generate_bir_reminder', 'Generate BIR Tax Reminder'), ('dti_compliance_check', 'DTI Compliance Check'), ('post_facebook', 'Post to Facebook'), ('post_instagram', 'Post to Instagram'), ('post_tiktok', 'Post to TikTok'), ('update_shopee_inventory', 'Update Shopee Inventory'), ('update_lazada_inventory', 'Update Lazada Inventory'), ('process_shopee_order', 'Process Shopee Order'), ('generate_content', 'Generate AI Content'), ('translate_content', 'Translate Content'), ('analyze_sentiment', 'Analyze Sentiment'), ('webhook', 'Send Webhook'), ('api_call', 'Make API Call'), ('file_upload', 'Upload File'), ('send_notification', 'Send In-App Notification'), ('send_slack_message', 'Send Slack Message'), ('send_teams_message', 'Send Teams Message')], max_length=50)),
                ('action_config', models.JSONField(default=dict, help_text='Action-specific configuration')),
                ('order', models.IntegerField(default=0, help_text='Order of execution')),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='Conditions for execution')),
                ('is_conditional', models.BooleanField(default=False)),
                ('ai_enhanced', models.BooleanField(default=False)),
                ('ai_prompt_template', models.TextField(blank=True, help_text='AI prompt template for this action')),
                ('retry_on_failure', models.BooleanField(default=True)),
                ('max_retries', models.IntegerField(default=3)),
                ('delay_seconds', models.IntegerField(default=0, help_text='Delay before executing this action')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='automations.automationworkflow')),
            ],
            options={
                'verbose_name': 'Automation Action',
                'verbose_name_plural': 'Automation Actions',
                'db_table': 'automation_actions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('trigger_data', models.JSONField(default=dict, help_text='Data that triggered the workflow')),
                ('execution_log', models.JSONField(default=list, help_text='Step-by-step execution log')),
                ('output_data', models.JSONField(default=dict, help_text='Final output data')),
                ('error_message', models.TextField(blank=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('ai_calls_made', models.IntegerField(default=0)),
                ('ai_tokens_used', models.IntegerField(default=0)),
                ('ai_cost_estimate', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('actions_completed', models.IntegerField(default=0)),
                ('actions_failed', models.IntegerField(default=0)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='automations.automationworkflow')),
            ],
            options={
                'verbose_name': 'Workflow Execution',
                'verbose_name_plural': 'Workflow Executions',
                'db_table': 'workflow_executions',
                'ordering': ['-started_at'],
            },
        ),
    ]
