# Generated by Django 5.2.3 on 2025-06-20 17:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Custom name for this integration', max_length=255)),
                ('integration_type', models.CharField(choices=[('email', 'Email (Gmail/Outlook)'), ('sms', 'SMS Service'), ('chat', 'Chat Platform'), ('payment', 'Payment Gateway'), ('gcash', 'GCash'), ('paymaya', 'PayMaya'), ('grabpay', 'GrabPay'), ('bdo', 'BDO Unibank'), ('bpi', 'Bank of the Philippine Islands'), ('metrobank', 'Metrobank'), ('unionbank', 'UnionBank'), ('crm', 'CRM System'), ('calendar', 'Calendar'), ('storage', 'File Storage'), ('social_media', 'Social Media'), ('facebook', 'Facebook/Meta Business'), ('instagram', 'Instagram Business'), ('tiktok', 'TikTok for Business'), ('ecommerce', 'E-commerce Platform'), ('shopee', 'Shopee'), ('lazada', 'Lazada'), ('zalora', 'Zalora'), ('government', 'Government Service'), ('bir', 'Bureau of Internal Revenue'), ('dti', 'Department of Trade and Industry'), ('sss', 'Social Security System'), ('philhealth', 'PhilHealth'), ('communication', 'Communication Tool'), ('slack', 'Slack'), ('teams', 'Microsoft Teams'), ('discord', 'Discord'), ('webhook', 'Custom Webhook'), ('api', 'Custom API')], max_length=50)),
                ('service_name', models.CharField(help_text='Official service name', max_length=100)),
                ('service_url', models.URLField(blank=True, help_text='Service website or API endpoint')),
                ('config_data', models.JSONField(default=dict, help_text='Integration-specific configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('api_secret', models.CharField(blank=True, max_length=500)),
                ('webhook_secret', models.CharField(blank=True, max_length=255)),
                ('oauth_provider', models.CharField(blank=True, max_length=100)),
                ('oauth_scope', models.TextField(blank=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('health_status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('error', 'Error'), ('disconnected', 'Disconnected')], default='healthy', max_length=20)),
                ('health_message', models.TextField(blank=True)),
                ('total_requests', models.IntegerField(default=0)),
                ('successful_requests', models.IntegerField(default=0)),
                ('failed_requests', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('rate_limit_remaining', models.IntegerField(blank=True, null=True)),
                ('rate_limit_reset', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Integration',
                'verbose_name_plural': 'Integrations',
                'db_table': 'integrations',
                'unique_together': {('user', 'service_name', 'name')},
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('request', 'API Request'), ('response', 'API Response'), ('error', 'Error'), ('health_check', 'Health Check'), ('auth', 'Authentication')], max_length=20)),
                ('method', models.CharField(blank=True, max_length=10)),
                ('endpoint', models.CharField(blank=True, max_length=500)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('workflow_execution', models.UUIDField(blank=True, help_text='Related workflow execution ID', null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Integration Log',
                'verbose_name_plural': 'Integration Logs',
                'db_table': 'integration_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url_path', models.CharField(help_text='Unique URL path for this webhook', max_length=255, unique=True)),
                ('secret_key', models.CharField(help_text='Secret key for webhook verification', max_length=255)),
                ('allowed_ips', models.JSONField(blank=True, default=list, help_text='Allowed IP addresses')),
                ('require_signature', models.BooleanField(default=True)),
                ('signature_header', models.CharField(default='X-Signature', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('auto_trigger_workflows', models.BooleanField(default=True)),
                ('total_requests', models.IntegerField(default=0)),
                ('successful_requests', models.IntegerField(default=0)),
                ('failed_requests', models.IntegerField(default=0)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Webhook Endpoint',
                'verbose_name_plural': 'Webhook Endpoints',
                'db_table': 'webhook_endpoints',
            },
        ),
    ]
